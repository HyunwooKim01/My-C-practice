#pragma once    
#include <iostream>
#include <map>
using namespace std;

template <typename K, typename V> void print_map(map < K, V > m) {
	for (typename map< K, V> ::iterator it = m.begin(); it != m.end(); ++it)
		cout << it->first << " " << it->second << endl;
}
template <typename T> void print_2dim_array(T m[][2], int size) {
	for (int i = 0; i < size; i++) {
		cout << m[i][0] <<" "<< m[i][1] << endl;
	}
}
//hw.h

---------------------------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <string>
#include "hw.h"
using namespace std;
int main() {
	ifstream fin("animal.txt");
	if (!fin) { cerr << "사전열기실패"; return 0; }
	string m[100][2];
	int size = 0;
	while (true) {
		fin >> m[size][0] >> m[size][1];
		if (fin.eof()) break;
		size++;
	}
	fin.close();

	print_2dim_array(m, size);
	cout << "--------------------------------------" << endl << endl;
	cout << "총동물수= " << size << endl << endl;
	cout << "--------------------------------------" << endl;
	string a;
	while (true) {
		cout << "찾고 싶은 동물: ";
		getline(cin, a);
		if (a == "exit")	break;
		else {
			for (int i = 0; i < size; i++) {
				if (a == m[i][0]) {
					cout << "--> " << m[i][1] << endl << endl;
					break;
				}
				else if (i == size-1) {
					cout << "미등록 동물입니다." << endl << endl;
				}
			}
		}
	}

	cout << "이용해주셔서감사합니다!" << endl;

	getchar();
}
//main.cpp
